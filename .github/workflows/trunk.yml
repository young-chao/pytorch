name: trunk

on:
  push:
    branches:
      - master
      - main
      - release/*
      - landchecks/*
    tags:
      - ciflow/trunk/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  parallelnative-linux-focal-py3_7-gcc7-build:
    name: parallelnative-linux-focal-py3.7-gcc7
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: parallelnative-linux-focal-py3.7-gcc7
      docker-image-name: pytorch-linux-focal-py3.7-gcc7
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 2, runner: "linux.2xlarge" },
          { config: "default", shard: 2, num_shards: 2, runner: "linux.2xlarge" },
        ]}

  parallelnative-linux-focal-py3_7-gcc7-test:
    name: parallelnative-linux-focal-py3.7-gcc7
    uses: ./.github/workflows/_linux-test.yml
    needs: parallelnative-linux-focal-py3_7-gcc7-build
    with:
      build-environment: parallelnative-linux-focal-py3.7-gcc7
      docker-image: ${{ needs.parallelnative-linux-focal-py3_7-gcc7-build.outputs.docker-image }}
      test-matrix: ${{ needs.parallelnative-linux-focal-py3_7-gcc7-build.outputs.test-matrix }}

  # Build PyTorch with BUILD_CAFFE2=ON
  caffe2-linux-focal-py3_7-gcc7-build:
    name: caffe2-linux-focal-py3.7-gcc7
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: caffe2-linux-focal-py3.7-gcc7
      docker-image-name: pytorch-linux-focal-py3.7-gcc7

  linux-bionic-cuda10_2-py3_9-gcc7-build:
    name: linux-bionic-cuda10.2-py3.9-gcc7
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-bionic-cuda10.2-py3.9-gcc7
      docker-image-name: pytorch-linux-bionic-cuda10.2-cudnn7-py3.9-gcc7
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 4, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "default", shard: 2, num_shards: 4, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "default", shard: 3, num_shards: 4, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "default", shard: 4, num_shards: 4, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "functorch", shard: 1, num_shards: 1, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "slow", shard: 1, num_shards: 2, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "slow", shard: 2, num_shards: 2, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "nogpu_AVX512", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
          { config: "nogpu_NO_AVX2", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
          { config: "jit_legacy", shard: 1, num_shards: 1, runner: "linux.4xlarge.nvidia.gpu" },
          { config: "distributed", shard: 1, num_shards: 3, runner: "linux.8xlarge.nvidia.gpu" },
          { config: "distributed", shard: 2, num_shards: 3, runner: "linux.8xlarge.nvidia.gpu" },
          { config: "distributed", shard: 3, num_shards: 3, runner: "linux.8xlarge.nvidia.gpu" },
        ]}

  linux-bionic-cuda10_2-py3_9-gcc7-test:
    name: linux-bionic-cuda10.2-py3.9-gcc7
    uses: ./.github/workflows/_linux-test.yml
    needs: linux-bionic-cuda10_2-py3_9-gcc7-build
    with:
      build-environment: linux-bionic-cuda10.2-py3.9-gcc7
      docker-image: ${{ needs.linux-bionic-cuda10_2-py3_9-gcc7-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-bionic-cuda10_2-py3_9-gcc7-build.outputs.test-matrix }}

  libtorch-linux-bionic-cuda11_6-py3_7-gcc7-build:
    name: libtorch-linux-bionic-cuda11.6-py3.7-gcc7
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: libtorch-linux-bionic-cuda11.6-py3.7-gcc7
      docker-image-name: pytorch-linux-bionic-cuda11.6-cudnn8-py3-gcc7
      build-generates-artifacts: false

  # no-ops builds test USE_PER_OPERATOR_HEADERS=0 where ATen/ops is not generated
  linux-xenial-cuda11_3-py3_7-gcc7-no-ops-build:
    name: linux-xenial-cuda11.3-py3.7-gcc7-no-ops
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-xenial-cuda11.3-py3.7-gcc7-no-ops
      docker-image-name: pytorch-linux-xenial-cuda11.3-cudnn8-py3-gcc7

  pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build:
    name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build
    uses: ./.github/workflows/_android-full-build-test.yml
    with:
      build-environment: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build
      docker-image-name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c

  linux-bionic-py3_7-clang9-slow-build:
    name: linux-bionic-py3.7-clang9-slow
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-bionic-py3.7-clang9-slow
      docker-image-name: pytorch-linux-bionic-py3.7-clang9
      test-matrix: |
        { include: [
          { config: "slow", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
        ]}

  linux-bionic-py3_7-clang9-slow-test:
    name: linux-bionic-py3.7-clang9-slow
    uses: ./.github/workflows/_linux-test.yml
    needs: linux-bionic-py3_7-clang9-slow-build
    with:
      build-environment: linux-bionic-py3.7-clang9-slow
      docker-image: ${{ needs.linux-bionic-py3_7-clang9-slow-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-bionic-py3_7-clang9-slow-build.outputs.test-matrix }}

  ios-12-5-1-x86-64:
    name: ios-12-5-1-x86-64
    uses: ./.github/workflows/_ios-build-test.yml
    with:
      build-environment: ios-12-5-1-x86-64
      ios-platform: SIMULATOR
      ios-arch: x86_64
    secrets:
      IOS_CERT_KEY_2022: ${{ secrets.IOS_CERT_KEY_2022 }}
      IOS_CERT_SECRET: ${{ secrets.IOS_CERT_SECRET}}
      IOS_DEV_TEAM_ID: ${{ secrets.IOS_DEV_TEAM_ID}}
      IOS_SIGN_KEY_2022: ${{ secrets.IOS_SIGN_KEY_2022 }}

  macos-12-py3-x86-64-build:
    name: macos-12-py3-x86-64
    uses: ./.github/workflows/_mac-build.yml
    with:
      build-environment: macos-12-py3-x86-64
      xcode-version: "13.3.1"
      runner-type: macos-12-xl
      build-generates-artifacts: true
    secrets:
      MACOS_SCCACHE_S3_ACCESS_KEY_ID: ${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}
      MACOS_SCCACHE_S3_SECRET_ACCESS_KEY: ${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}

  macos-12-py3-x86-64-test:
    name: macos-12-py3-x86-64
    uses: ./.github/workflows/_mac-test.yml
    needs: macos-12-py3-x86-64-build
    with:
      build-environment: macos-12-py3-x86-64
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 3, runner: "macos-12" },
          { config: "default", shard: 2, num_shards: 3, runner: "macos-12" },
          { config: "default", shard: 3, num_shards: 3, runner: "macos-12" },
          { config: "functorch", shard: 1, num_shards: 1, runner: "macos-12" },
        ]}
      arch: x86_64
    secrets:
      AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID: ${{ secrets.AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID }}
      AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY: ${{ secrets.AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY }}

  macos-12-py3-x86-64-lite-interpreter-build-test:
    name: macos-12-py3-x86-64-lite-interpreter
    uses: ./.github/workflows/_mac-build.yml
    with:
      build-environment: macos-12-py3-lite-interpreter-x86-64
      xcode-version: "13.3.1"
      runner-type: macos-12-xl
      build-generates-artifacts: false
    secrets:
      MACOS_SCCACHE_S3_ACCESS_KEY_ID: ${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}
      MACOS_SCCACHE_S3_SECRET_ACCESS_KEY: ${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}

  macos-12-py3-arm64-build:
    name: macos-12-py3-arm64
    uses: ./.github/workflows/_mac-build.yml
    with:
      sync-tag: macos-12-py3-arm64-build
      build-environment: macos-12-py3-arm64
      xcode-version: "13.3.1"
      runner-type: macos-12-xl
      build-generates-artifacts: true
      # To match the one pre-installed in the m1 runners
      python_version: 3.9.12
    secrets:
      MACOS_SCCACHE_S3_ACCESS_KEY_ID: ${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}
      MACOS_SCCACHE_S3_SECRET_ACCESS_KEY: ${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}

  macos-12-py3-arm64-mps-test:
    name: macos-12-py3-arm64-mps
    uses: ./.github/workflows/_mac-test-mps.yml
    needs: macos-12-py3-arm64-build
    with:
      sync-tag: macos-12-py3-arm64-mps-test
      build-environment: macos-12-py3-arm64

  macos-12-py3-arm64-test:
    name: macos-12-py3-arm64
    uses: ./.github/workflows/_mac-test.yml
    needs: macos-12-py3-arm64-build
    with:
      build-environment: macos-12-py3-arm64
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 2, runner: "macos-m1-12" },
          { config: "default", shard: 2, num_shards: 2, runner: "macos-m1-12" },
        ]}
      arch: arm64
    secrets:
      AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID: ${{ secrets.AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID }}
      AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY: ${{ secrets.AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY }}

  win-vs2019-cuda11_6-py3-build:
    name: win-vs2019-cuda11.6-py3
    uses: ./.github/workflows/_win-build.yml
    with:
      build-environment: win-vs2019-cuda11.6-py3
      cuda-version: "11.6"
      sync-tag: win-cuda-build
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "default", shard: 2, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "default", shard: 3, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "default", shard: 4, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "default", shard: 5, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "default", shard: 6, num_shards: 6, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "functorch", shard: 1, num_shards: 1, runner: "windows.8xlarge.nvidia.gpu" },
          { config: "force_on_cpu", shard: 1, num_shards: 1, runner: "windows.4xlarge" },
        ]}

  win-vs2019-cuda11_6-py3-test:
    name: win-vs2019-cuda11.6-py3
    uses: ./.github/workflows/_win-test.yml
    needs: win-vs2019-cuda11_6-py3-build
    with:
      build-environment: win-vs2019-cuda11.6-py3
      cuda-version: "11.6"
      test-matrix: ${{ needs.win-vs2019-cuda11_6-py3-build.outputs.test-matrix }}

  linux-focal-rocm5_2-py3_7-build:
    name: linux-focal-rocm5.2-py3.7
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-focal-rocm5.2-py3.7
      docker-image-name: pytorch-linux-focal-rocm5.2-py3.7
      sync-tag: rocm-build

  linux-focal-rocm5_2-py3_7-test:
    name: linux-focal-rocm5.2-py3.7
    uses: ./.github/workflows/_rocm-test.yml
    needs: linux-focal-rocm5_2-py3_7-build
    with:
      build-environment: linux-focal-rocm5.2-py3.7
      docker-image: ${{ needs.linux-focal-rocm5_2-py3_7-build.outputs.docker-image }}
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 3, runner: "linux.rocm.gpu" },
          { config: "default", shard: 2, num_shards: 3, runner: "linux.rocm.gpu" },
          { config: "default", shard: 3, num_shards: 3, runner: "linux.rocm.gpu" },
        ]}
    secrets:
      AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID: ${{ secrets.AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID }}
      AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY: ${{ secrets.AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY }}

  android-emulator-build-test:
    name: android-emulator-build-test
    uses: ./.github/workflows/_run_android_tests.yml
